version: '3'

services:
  postgres:
    image: postgres:9.6
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    restart: always
    volumes:
      # - ./docker-scripts:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    image: jboss/keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: ${POSTGRES_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8001:8080
    depends_on:
      - postgres
    # networks:
    #   - postgres
    restart: always
  
  # dejavu:
  #   image: appbaseio/dejavu
  #   restart: unless-stopped
  #   networks:
  #     - search
  #   ports:
  #     - 1358:1358
  #   depends_on:
  #     - search

  graphql-engine:
    image: hasura/graphql-engine:v1.0.0-beta.6
    ports:
      - 8002:8080
    restart: always
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: mysecret
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  # minio:
  #   image: minio/minio
  #   volumes:
  #     - file_data:/data
  #   ports:
  #     - "9000:9000"
  #   command: server /data

# networks:
#   postgres:
#     driver: bridge
#   search:
#     driver: bridge

volumes:
  # file_data:
  postgres_data:
#   es_data:
#   fa_config:

  
# volumes:
#   postgres_data:
#     driver: local